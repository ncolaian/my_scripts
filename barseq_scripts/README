This is all my scripts for performing barseq.

Barseq was run on CL21 - The Genome ID is 2558309150

The steps to run barseq are as follows ->

1) Get all the necessary files to perform barseq. This includes a tsv metadata file. A pool file from tnseq, and the .GC file that was used to create the tnseq library. ( A small descrption of the metadata file can be found at /netscr/ncolaian/barseq/columns_for_metadata_tsv.txt )

   a) If you want to collapse the counts based upon cogs, clstr, or fxn you need to change the first two columns of the .GC file. ( This is also what you should change if you want to collapse the counts on something else )
   
   - To create a cluster and cog GC file which will aggregate cluster the counts based on cluster -> use create_cog_clstr_gc.pl
   - To create two gc files - 1 being able to aggregate counts on cogs and the other on fxn -> use create_new_gc.pl
   
     -Both of these require the all_annote.txt for the genome from the DAFE database, the original genes.GC file, and the cognames2003-2014.tab file located at /netscr/yourston/compMetaG/metadata

2) Need to create a directory containing all the fastq files from the experiments. You need to make sure that the names include ITXXX ( X's are a number index ) and that this index is included in the metadata file. The name of this directory must also be in the metadata file under SetName.

   a) to combine the fastq samples ( i.e. pooling the data ) use the script combine_samples.sh

3) Run run_barseq_pipeline.pl => this creates the .colsum and .poolcount file ( the help page on this is pretty good )

   a) you can add cog or gene information to the poolcount file using add_gene_idnames_bsq_reg.pl. This is important in many of the R scripts for aggregating the counts. It will add the first two columns of the .GC file to the end of the poolcount file.

4) Run BarSeqR.pl from the directory /proj/cdjones_lab/ncolaian/apps/feba/bin. It is important to run our data from this directory because I removed the filtering and normalization steps so that the logratios as calculated in the paper were performed on our data. If it is not run on this it will fail.

   a) in the resulting html directory the logratio file that you are looking for is fit_logratios_unnormalized.tab

   b) if you'd like to determine if a logratio is associated with a fxn or not use add_fxn_col_tolr.pl. This will add a column to the logratio file that will tell you if that cog has a fxn or not. The logratio file must have cogs in the locusId column

#### More Script Description ####

add_fxn_col_tolr.pl:
	This script takes the unnormalized_logratio file from the final output of barseq and adds an extra column at the end of the file that flags it as having a fxn or not. Pretty easy to then graph in R.

add_gene_idnames_bsq_reg.pl:
	This script will take in a poolcount file and add two columns at the end of the file -> geneid and cog. This will be the information from the first two columns of a .GC file that you use to add this info.

combine_poolcounts.pl:
	This will literally combine the poolcounts Indexs if the barcodes are in the same order. This means that the poolcount will add the index columns from one poolcount file to the other. Good if you do two separate counts on the same data.

merge_poolcounts.pl:
	This will take two poolcount files that have the identical row and column order. The counts will be compared and the count with the highest amount will be retained for the printing of the final poolcount file.

combine_samples.sh:
	This is a small shell script to combine the fastq files of samples. This is really good for combining files when you are pooling the reads. Just need to know the Index numbers that correspond to the pooling you'd like to do.

create_cog_clstr_gc.pl:
	This will create a single gc file that outputs the Clustr information under the geneid ( allowing the poolcount file to aggregate counts based on cluster in later analysis ). It will also put the cog information in the second column for reference.

create_new_gc.pl:
	Similar to create_cog_clstr. Takes in a .gc file and returns two .gc files with the first two columns changed. One will have the first two columns changed to COG info, and the other will have the columns changed to cogFxn info.

run_barseq_pipeline:
	This has good documentation. It is the first step of our barseq pipeline. It will create a .poolcount and .colsum file. Must make sure the inputs are formatted correctly - including the genome directory. After this step you can modify the poolcount file and then run BarSeqR.pl. If you want to run the whole thing at once you can uncomment the BarSeqR.pl portion of the script.